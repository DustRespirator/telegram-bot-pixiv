import html from "./html";
import markdownv from "./markdownv";
import { parseEntities, escapeHTML, escapeMarkdown, htmlEntityPatterns, markdownPatterns, markdownV2Patterns, type TypeEntity } from "./utils";
import { version } from "../package.json";
import { type TypeSupportedLanguages, SupportedLanguages } from "./constants";
declare const _default: {
    html: {
        bold: (text: string) => string;
        strong: (text: string) => string;
        italic: (text: string) => string;
        emphasis: (text: string) => string;
        underline: (text: string) => string;
        ins: (text: string) => string;
        strikethrough: (text: string) => string;
        strike: (text: string) => string;
        del: (text: string) => string;
        spoiler: (text: string) => string;
        tgSpoiler: (text: string) => string;
        inlineURL: (text: string, url: string) => string;
        inlineMention: (text: string, userId: string) => string;
        inlineEmoji: (emojiId: string) => string;
        inlineCode: (text: string) => string;
        blockquote: (text: string) => string;
        blockquoteExpandable: (text: string) => string;
        preFormattedCodeBlock: (text: string) => string;
        preFormattedCodeBlockLanguage: (text: string, language: TypeSupportedLanguages) => string;
    };
    markdownv: {
        v1: {
            bold: (text: string) => string;
            italic: (text: string) => string;
            inlineURL: (text: string, url: string) => string;
            inlineMention: (text: string, userId: string) => string;
            inlineCode: (text: string) => string;
            preFormattedCodeBlock: (text: string) => string;
            preFormattedCodeBlockLanguage: (text: string, language: TypeSupportedLanguages) => string;
        };
        bold: (text: string) => string;
        italic: (text: string) => string;
        underline: (text: string) => string;
        strikethrough: (text: string) => string;
        spoiler: (text: string) => string;
        inlineURL: (text: string, url: string) => string;
        inlineMention: (text: string, userId: string) => string;
        inlineEmoji: (emojiId: string) => string;
        inlineCode: (text: string) => string;
        blockquote: (text: string) => string;
        blockquoteExpandable: (text: string) => string;
        preFormattedCodeBlock: (text: string) => string;
        preFormattedCodeBlockLanguage: (text: string, language: TypeSupportedLanguages) => string;
    };
    parseEntities: typeof parseEntities;
    escapeHTML: typeof escapeHTML;
    escapeMarkdown: typeof escapeMarkdown;
    htmlEntityPatterns: Record<string, RegExp>;
    markdownPatterns: Record<string, RegExp>;
    markdownV2Patterns: Record<string, RegExp>;
    version: string;
    SupportedLanguages: {
        Markup: string[];
        CSS: string[];
        C_like: string[];
        Regex: string[];
        JavaScript: string[];
        ABAP: string[];
        ABNF: string[];
        ActionScript: string[];
        Ada: string[];
        Agda: string[];
        AL: string[];
        ANTLR4: string[];
        "Apache Configuration": string[];
        SQL: string[];
        Apex: string[];
        APL: string[];
        AppleScript: string[];
        AQL: string[];
        C: string[];
        "C++": string[];
        Arduino: string[];
        ARFF: string[];
        "ARM Assembly": string[];
        Bash: string[];
        YAML: string[];
        Markdown: string[];
        Arturo: string[];
        AsciiDoc: string[];
        "C#": string[];
        "ASP.NET (C#)": string[];
        "6502 Assembly": string[];
        "Atmel AVR Assembly": string[];
        AutoHotkey: string[];
        AutoIt: string[];
        AviSynth: string[];
        "Avro IDL": string[];
        AWK: string[];
        BASIC: string[];
        Batch: string[];
        BBcode: string[];
        BBj: string[];
        Bicep: string[];
        Birb: string[];
        Bison: string[];
        BNF: string[];
        BQN: string[];
        Brainfuck: string[];
        BrightScript: string[];
        Bro: string[];
        CFScript: string[];
        ChaiScript: string[];
        CIL: string[];
        "Cilk/C": string[];
        "Cilk/C++": string[];
        Clojure: string[];
        CMake: string[];
        COBOL: string[];
        CoffeeScript: string[];
        Concurnas: string[];
        "Content-Security-Policy": string[];
        Cooklang: string[];
        Ruby: string[];
        Crystal: string[];
        CSV: string[];
        CUE: string[];
        Cypher: string[];
        D: string[];
        Dart: string[];
        DataWeave: string[];
        DAX: string[];
        Dhall: string[];
        Diff: string[];
        "Markup templating": string[];
        "Django/Jinja2": string[];
        "DNS zone file": string[];
        Docker: string[];
        "DOT (Graphviz)": string[];
        EBNF: string[];
        EditorConfig: string[];
        Eiffel: string[];
        EJS: string[];
        Elixir: string[];
        Elm: string[];
        Lua: string[];
        "Embedded Lua templating": string[];
        ERB: string[];
        Erlang: string[];
        "Excel Formula": string[];
        "F#": string[];
        Factor: string[];
        False: string[];
        "Firestore security rules": string[];
        Flow: string[];
        Fortran: string[];
        "FreeMarker Template Language": string[];
        "GameMaker Language": string[];
        "GAP (CAS)": string[];
        "G-code": string[];
        GDScript: string[];
        GEDCOM: string[];
        gettext: string[];
        Git: string[];
        GLSL: string[];
        GN: string[];
        "GNU Linker Script": string[];
        Go: string[];
        "Go module": string[];
        GraphQL: string[];
        Groovy: string[];
        Less: string[];
        "Sass (SCSS)": string[];
        Textile: string[];
        Haml: string[];
        Handlebars: string[];
        Haskell: string[];
        Haxe: string[];
        HCL: string[];
        HLSL: string[];
        Hoon: string[];
        "HTTP Public-Key-Pins": string[];
        "HTTP Strict-Transport-Security": string[];
        JSON: string[];
        URI: string[];
        HTTP: string[];
        IchigoJam: string[];
        Icon: string[];
        "ICU Message Format": string[];
        Idris: string[];
        ignore: string[];
        "Inform 7": string[];
        Ini: string[];
        Io: string[];
        J: string[];
        Java: string[];
        Scala: string[];
        PHP: string[];
        "JavaDoc-like": string[];
        JavaDoc: string[];
        "Java stack trace": string[];
        Jolie: string[];
        JQ: string[];
        TypeScript: string[];
        JSDoc: string[];
        N4JS: string[];
        JSON5: string[];
        JSONP: string[];
        "JS stack trace": string[];
        Julia: string[];
        Keepalived: string[];
        Keyman: string[];
        Kotlin: string[];
        Kusto: string[];
        LaTeX: string[];
        Latte: string[];
        Scheme: string[];
        LilyPond: string[];
        Liquid: string[];
        Lisp: string[];
        LiveScript: string[];
        "LLVM IR": string[];
        "Log file": string[];
        LOLCODE: string[];
        "Magma (CAS)": string[];
        Makefile: string[];
        Mata: string[];
        MATLAB: string[];
        MAXScript: string[];
        MEL: string[];
        Mermaid: string[];
        METAFONT: string[];
        Mizar: string[];
        MongoDB: string[];
        Monkey: string[];
        MoonScript: string[];
        N1QL: string[];
        "Nand To Tetris HDL": string[];
        Naninovel: string[];
        NASM: string[];
        NEON: string[];
        Nevod: string[];
        nginx: string[];
        Nim: string[];
        Nix: string[];
        NSIS: string[];
        ObjectiveC: string[];
        OCaml: string[];
        Odin: string[];
        OpenCL: string[];
        OpenQasm: string[];
        Oz: string[];
        "PARI/GP": string[];
        Parser: string[];
        Pascal: string[];
        Pascaligo: string[];
        "PATROL Scripting Language": string[];
        "PC-Axis": string[];
        PeopleCode: string[];
        Perl: string[];
        PHPDoc: string[];
        PlantUML: string[];
        "PL/SQL": string[];
        PowerQuery: string[];
        PowerShell: string[];
        Processing: string[];
        Prolog: string[];
        PromQL: string[];
        properties: string[];
        "Protocol Buffers": string[];
        Stylus: string[];
        Twig: string[];
        Pug: string[];
        Puppet: string[];
        PureBasic: string[];
        Python: string[];
        Q: string[];
        QML: string[];
        Qore: string[];
        R: string[];
        Racket: string[];
        "Razor C#": string[];
        "React JSX": string[];
        "React TSX": string[];
        Reason: string[];
        Rego: string[];
        "Ren'py": string[];
        ReScript: string[];
        "reST (reStructuredText)": string[];
        Rip: string[];
        Roboconf: string[];
        "Robot Framework": string[];
        Rust: string[];
        SAS: string[];
        "Sass (Sass)": string[];
        "Shell session": string[];
        Smali: string[];
        Smalltalk: string[];
        Smarty: string[];
        SML: string[];
        "Solidity (Ethereum)": string[];
        "Solution file": string[];
        Soy: string[];
        "Splunk SPL": string[];
        SQF: string[];
        Squirrel: string[];
        Stan: string[];
        "Stata Ado": string[];
        "Structured Text (IEC 61131-3)": string[];
        SuperCollider: string[];
        Swift: string[];
        "Systemd configuration file": string[];
        "T4 templating": string[];
        "T4 Text Templates (C#)": string[];
        "VB.Net": string[];
        "T4 Text Templates (VB)": string[];
        TAP: string[];
        Tcl: string[];
        "Template Toolkit 2": string[];
        TOML: string[];
        Tremor: string[];
        TypoScript: string[];
        UnrealScript: string[];
        "UO Razor Script": string[];
        V: string[];
        Vala: string[];
        Velocity: string[];
        Verilog: string[];
        VHDL: string[];
        vim: string[];
        "Visual Basic": string[];
        WarpScript: string[];
        WebAssembly: string[];
        "Web IDL": string[];
        WGSL: string[];
        "Wiki markup": string[];
        "Wolfram language": string[];
        Wren: string[];
        Xeora: string[];
        XQuery: string[];
        YANG: string[];
        Zig: string[];
    };
};
export default _default;
export { html, markdownv, parseEntities, escapeHTML, escapeMarkdown, htmlEntityPatterns, markdownPatterns, markdownV2Patterns, version, type TypeEntity, type TypeSupportedLanguages, SupportedLanguages, };
//# sourceMappingURL=index.d.ts.map
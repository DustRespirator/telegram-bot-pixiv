"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelegramError = void 0;
const ErrorCodes_1 = require("./ErrorCodes");
class TelegramError extends Error {
    constructor(code, params) {
        var _a;
        const message = ErrorCodes_1.ErrorMessages[code];
        const formattedMessage = message ? formatMessage(message, params) : message;
        super(formattedMessage);
        Object.defineProperty(this, "code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "description", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.name = "TelegramError";
        this.code = code;
        this.description = formattedMessage;
        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, TelegramError);
    }
    toString() {
        return `[${this.code}] ${this.message}`;
    }
}
exports.TelegramError = TelegramError;
function formatMessage(message, params) {
    if (!params)
        return message;
    return message.replace(/\${(.*?)}/g, (_, key) => {
        return key in params ? String(params[key]) : `{${key}}`;
    });
}

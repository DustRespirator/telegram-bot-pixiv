"use strict";
const { Base } = require("../Base");
const { Gift } = require("./Gift");
const { MessageEntities } = require("../message/MessageEntities");
class OwnedGiftRegular extends Base {
    constructor(client, data) {
        super(client);
        this.type = data.type;
        this.gift = new Gift(client, data.gift);
        if ("owned_gift_id" in data) {
            this.ownedGiftId = data.owned_gift_id;
        }
        if ("sender_user" in data) {
            this.senderUser = client.users._add(data.sender_user);
        }
        this.senderUnixTime = data.send_date;
        if ("text" in data) {
            this.content = data.text;
            if ("entities" in data) {
                this.entities = new MessageEntities(client, data.text, data.entities);
            }
        }
        if ("is_private" in data) {
            this.isPrivate = data.is_private;
        }
        if ("is_saved" in data) {
            this.isSaved = data.is_saved;
        }
        if ("can_be_upgraded" in data) {
            this.beUpgraded = data.can_be_upgraded;
        }
        if ("was_refunded" in data) {
            this.wasRefunded = data.was_refunded;
        }
        if ("convert_star_count" in data) {
            this.convertStarCount = data.convert_star_count;
        }
        if ("prepaid_upgrade_star_count" in data) {
            this.prepaidUpgradeStarCount = data.prepaid_upgrade_star_count;
        }
    }
    get senderTimestamp() {
        return this.senderUnixTime * 1000;
    }
    get senderAt() {
        return new Date(this.senderUnixTime);
    }
}
module.exports = { OwnedGiftRegular };

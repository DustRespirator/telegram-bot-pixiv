"use strict";
const { Gift } = require("./Gift");
const { Collection } = require("@telegram.ts/collection");
class Gifts {
    constructor(client, data) {
        this.gifts = new Collection(data.gifts.map((gift) => [gift.id, new Gift(client, gift)]));
    }
    equals(other) {
        if (!other || !(other instanceof Gifts))
            return false;
        const thisGifts = Array.from(this.gifts).map(([_, gift]) => gift);
        const otherGifts = Array.from(other.gifts).map(([_, gift]) => gift);
        return (thisGifts.length === otherGifts.length &&
            thisGifts.every((gift, i) => { var _a; return (_a = otherGifts[i]) === null || _a === void 0 ? void 0 : _a.equals(gift); }));
    }
    *[Symbol.iterator]() {
        for (const [_, gift] of this.gifts) {
            yield gift;
        }
    }
}
module.exports = { Gifts };

"use strict";
const { Base } = require("../Base");
const { OrderInfo } = require("./OrderInfo");
class SuccessfulPayment extends Base {
    constructor(client, data) {
        super(client);
        this.currency = data.currency;
        this.totalAmount = data.total_amount;
        this.payload = data.invoice_payload;
        if ("subscription_expiration_date" in data) {
            this.subscriptionExpirationUnixTime = data.subscription_expiration_date;
        }
        this.isRecurring = Boolean(data.is_recurring);
        this.isFirstRecurring = Boolean(data.is_first_recurring);
        if ("shipping_option_id" in data) {
            this.shippingId = data.shipping_option_id;
        }
        if ("order_info" in data) {
            this.orderInfo = new OrderInfo(data.order_info);
        }
        this.telegramPaymentId = data.telegram_payment_charge_id;
        this.providedPaymentId = data.provider_payment_charge_id;
    }
    get subscriptionExpirationTimestamp() {
        return this.subscriptionExpirationUnixTime
            ? this.subscriptionExpirationUnixTime * 1000
            : null;
    }
    get subscriptionExpirationAt() {
        return this.subscriptionExpirationTimestamp
            ? new Date(this.subscriptionExpirationTimestamp)
            : null;
    }
    refundStarPayment(userId) {
        return this.client.refundStarPayment(userId, this.telegramPaymentId);
    }
    editStarSubscription({ userId, isCanceled }) {
        return this.client.editUserStarSubscription({
            userId,
            isCanceled,
            telegramPaymentChargeId: this.telegramPaymentId,
        });
    }
}
module.exports = { SuccessfulPayment };

"use strict";
const { Base } = require("../Base");
class WebhookInfo extends Base {
    constructor(client, data) {
        super(client);
        if ("url" in data) {
            this.url = data.url;
        }
        this.customCertificate = data.has_custom_certificate;
        this.pendingCount = data.pending_update_count;
        if ("ip_address" in data) {
            this.ipAddress = data.ip_address;
        }
        if ("last_error_date" in data) {
            this.lastedUnixTime = data.last_error_date;
        }
        if ("last_error_message" in data) {
            this.errorMessage = data.last_error_message;
        }
        if ("last_synchronization_error_date" in data) {
            this.synchronizatedUnixTime = data.last_synchronization_error_date;
        }
        if ("max_connections" in data) {
            this.connections = data.max_connections;
        }
        this.allowedUpdates = data.allowed_updates || [];
    }
    delete(dropPendingUpdates) {
        return this.client.deleteWebhook(dropPendingUpdates);
    }
    get lastedTimestamp() {
        return this.lastedUnixTime ? this.lastedUnixTime * 1000 : null;
    }
    get lastedAt() {
        return this.lastedTimestamp ? new Date(this.lastedTimestamp) : null;
    }
    get synchronizatedTimestamp() {
        return this.synchronizatedUnixTime
            ? this.synchronizatedUnixTime * 1000
            : null;
    }
    get synchronizatedAt() {
        return this.synchronizatedTimestamp
            ? new Date(this.synchronizatedTimestamp)
            : null;
    }
}
module.exports = { WebhookInfo };

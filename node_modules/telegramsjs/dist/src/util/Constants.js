"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestEvents = exports.ReactionCollectorEvents = exports.CollectorEvents = exports.Events = exports.DefaultClientParameters = exports.DefaultPollingParameters = void 0;
const node_https_1 = require("node:https");
const DefaultPollingParameters = {
    offset: 0,
    limit: 100,
    timeout: 30,
    allowedUpdates: [
        "message",
        "edited_message",
        "channel_post",
        "edited_channel_post",
        "callback_query",
        "inline_query",
        "my_chat_member",
        "chat_member",
        "chat_join_request",
    ],
};
exports.DefaultPollingParameters = DefaultPollingParameters;
const DefaultClientParameters = {
    chatCacheMaxSize: -1,
    userCacheMaxSize: -1,
    pollingTimeout: 300,
    restOptions: {
        agent: new node_https_1.Agent({
            keepAlive: true,
            keepAliveMsecs: 10000,
        }),
        enableRateLimit: true,
    },
};
exports.DefaultClientParameters = DefaultClientParameters;
const Events = {
    Ready: "ready",
    Error: "error",
    Disconnect: "disconnect",
    RawUpdate: "rawUpdate",
    Message: "message",
    ChannelPost: "message",
    BusinessMessage: "message",
    BusinessConnection: "businessConnection",
    EditedMessage: "messageUpdate",
    EditedChannelPost: "messageUpdate",
    EditedBusinessMessage: "messageUpdate",
    DeletedBusinessMessages: "deletedBusinessMessages",
    MessageReaction: "messageReaction",
    MessageReactionCount: "messageReactionCount",
    InlineQuery: "inlineQuery",
    ChosenInlineResult: "chosenInlineResult",
    CallbackQuery: "callbackQuery",
    ShippingQuery: "shippingQuery",
    PreCheckoutQuery: "preCheckoutQuery",
    Poll: "poll",
    PollAnswer: "pollAnswer",
    MyChatMember: "myChatMember",
    ChatMember: "chatMember",
    ChatCreate: "chatCreate",
    ChatMemberAdd: "chatMemberAdd",
    ChatDelete: "chatDelete",
    ChatMemberRemove: "chatMemberRemove",
    ChatJoinRequest: "chatJoinRequest",
    ChatBoost: "chatBoost",
    RemovedChatBoost: "removedChatBoost",
    PurchasedPaidMedia: "purchasedPaidMedia",
};
exports.Events = Events;
const RestEvents = {
    RateLimit: "rateLimit",
    ApiRequest: "apiRequest",
    ApiResponse: "apiResponse",
};
exports.RestEvents = RestEvents;
const CollectorEvents = {
    Collect: "collect",
    Ignore: "ignore",
    Dispose: "dispose",
    End: "end",
};
exports.CollectorEvents = CollectorEvents;
const ReactionCollectorEvents = {
    User: "user",
    Create: "create",
    ...CollectorEvents,
};
exports.ReactionCollectorEvents = ReactionCollectorEvents;
